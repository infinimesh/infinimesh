{
    // Use IntelliSense to learn about possible attributes.
    // Hover to view descriptions of existing attributes.
    // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387
    "version": "0.2.0",
    "envFile": "${workspaceFolder}/.env",
    "inputs": [
        {
            "id": "handsfreeEnabled",
            "default": "enabled",
            "type": "pickString",
            "description": "Should Handsfree Console plugin be enabled?",
            "options": [
                {"label": "Enabled", "value": "enabled"},
                {"label": "Disabled", "value": ""}
            ]
        },
        {
            "id": "timeseriesEnabled",
            "default": "http://api.infinimesh.local/infinimesh.timeseries.ui/",
            "type": "promptString",
            "description": "Timeseries API Console Plugin URL (leave empty to disable)",
        },
        {
            "id": "httpFsEnabled",
            "default": "http://media.infinimesh.local/",
            "type": "promptString",
            "description": "Should HTTP FS Console Plugin URL (leave empty to disable)",
        },
    ],
    "compounds": [
        {
            "name": "Spin the backend up",
            "configurations": [
                "Launch Node(repo)",
                "Launch REST-API Gateway",
                "Launch Shadow",
                "Launch MQTT-Bridge",
                "Launch Handsfree"
            ]
        },
        {
            "name": "Spin the frontend up",
            "configurations": [
                "Launch Console Dev Server",
                "Launch Chrome against Console Dev server"
            ]
        },
        {
            "name": "Spin the infinimesh up",
            "configurations": [
                "Launch Node(repo)",
                "Launch REST-API Gateway",
                "Launch Shadow",
                "Launch MQTT-Bridge",
                "Launch Handsfree",
                "Launch Console Dev Server",
                "Launch Chrome against Console Dev server"
            ]
        }
    ],
    "configurations": [
        {
            "name": "Launch Debug Environment",
            "command": "make vscode",
            "request": "launch",
            "type": "node-terminal",
            "internalConsoleOptions": "openOnSessionStart",
        },
        {
            "name": "Launch Console Dev Server",
            "command": "pnpm dev",
            "request": "launch",
            "type": "node-terminal",
            "cwd": "${workspaceFolder}/console",
        },
        {
            "type": "chrome",
            "request": "launch",
            "name": "Launch Chrome against Console Dev server",
            "url": "http://console.infinimesh.local",
            "webRoot": "${workspaceFolder}/console/src"
        },
        {
            "name": "Launch Node(repo)",
            "type": "go",
            "request": "launch",
            "mode": "auto",
            "cwd": "${workspaceFolder}",
            "program": "${workspaceFolder}/cmd/repo",
            "stopOnEntry": false,
            "envFile": "${workspaceFolder}/.env",
            "internalConsoleOptions": "openOnSessionStart",
            "env": {
                "PORT": "8001",
                "DB_HOST": "localhost:8529",
                "REDIS_HOST": "localhost:6379",
                "SHADOW_HOST": "localhost:8003"
            }
        },
        {
            "name": "Launch REST-API Gateway",
            "type": "go",
            "request": "launch",
            "mode": "auto",
            "cwd": "${workspaceFolder}",
            "program": "${workspaceFolder}/cmd/web",
            "stopOnEntry": false,
            "envFile": "${workspaceFolder}/.env",
            "internalConsoleOptions": "openOnSessionStart",
            "env": {
                "PORT": "8002",
                "APISERVER_HOST": "api.infinimesh.local:8000",
                "HANDSFREE": "${input:handsfreeEnabled}",
                "TIMESERIES": "${input:timeseriesEnabled}",
                "HTTP_FS": "${input:httpFsEnabled}",
            }
        },
        {
            "name": "Launch Shadow",
            "type": "go",
            "request": "launch",
            "mode": "auto",
            "cwd": "${workspaceFolder}",
            "program": "${workspaceFolder}/cmd/shadow",
            "stopOnEntry": false,
            "envFile": "${workspaceFolder}/.env",
            "internalConsoleOptions": "openOnSessionStart",
            "env": {
                "PORT": "8003",
                "DEVICES_HOST": "localhost:8001",
                "REDIS_HOST": "localhost:6379",
            }
        },
        {
            "name": "Launch MQTT-Bridge",
            "type": "go",
            "request": "launch",
            "mode": "auto",
            "cwd": "${workspaceFolder}",
            "program": "${workspaceFolder}/cmd/mqtt-bridge",
            "stopOnEntry": false,
            "envFile": "${workspaceFolder}/.env",
            "internalConsoleOptions": "openOnSessionStart",
            "env": {
                "PORT": "8003",
                "DEVICES_HOST": "localhost:8001",
                "SHADOW_HOST": "localhost:8003",
                "TLS_CERT_FILE": "${workspaceFolder}/cmd/mqtt-bridge/server.crt",
                "TLS_KEY_FILE": "${workspaceFolder}/cmd/mqtt-bridge/server.key",
                "DEBUG": "true",
            }
        },
        {
            "name": "Launch Handsfree",
            "type": "go",
            "request": "launch",
            "mode": "auto",
            "cwd": "${workspaceFolder}",
            "program": "${workspaceFolder}/cmd/handsfree",
            "stopOnEntry": false,
            "envFile": "${workspaceFolder}/.env",
            "internalConsoleOptions": "openOnSessionStart",
            "env": {
                "PORT": "8004",
                "DEVICES_HOST": "localhost:8001",
                "REDIS_HOST": "localhost:6379",
            }
        },
    ]
}